<?php
require_once( 'config.php' );

function runGpio( $args ) {
    exec( "/usr/local/bin/gpio $args", $out, $status );
    if( $status ) {
        print( "<p class='error'>Failed to execute /usr/local/bin/gpio $args: Status $status</p>\n" );
    }
    if( is_array( $out ) && count( $out ) > 0  ) {
        return $out[0];
    } else {
        return NULL;
    }
}

if( $_POST ) {
    foreach( $devices as $deviceName => $devicePin ) {
        $postPar = $deviceName . 'Action';
        $postPar = str_replace( ' ', '_', $postPar ); // we love PHP
        if( $_POST[$postPar] ) {
            runGpio( "write $devicePin " . ( $_POST[$postPar] == 'Turn on' ? "1" : "0" ));
        }
    }
    header( 'Location: ' . $_SERVER['REQUEST_URI'] );
    exit( 0 );
}

function readCrontab() {
    global $devices;

    exec( "/usr/bin/crontab -l", $out, $status );
    # ignore status; it returns 1 if no crontab has been set yet

    $ret = array();
    foreach( $out as $line ) {
        if( preg_match( '/^(\d+) (\d+) \* \* \* \/usr\/local\/bin\/gpio write (\d+) ([01])$/', $line, $matches )) {
            foreach( $devices as $deviceName => $devicePin ) {
                if( $devicePin != $matches[3] ) {
                    continue;
                }
                if( $matches[4] == 1 ) {
                    $ret[$deviceName]['timeOn']['hour'] = $matches[2];
                    $ret[$deviceName]['timeOn']['min']  = $matches[1];
                } else {
                    # we write the on's before the off's, so it's here
                    $ret[$deviceName]['duration']['hour'] = $matches[2] - $ret[$deviceName]['timeOn']['hour'];
                    $ret[$deviceName]['duration']['min']  = $matches[1] - $ret[$deviceName]['timeOn']['min'];
                    while( $ret[$deviceName]['duration']['min'] < 0 ) {
                        $ret[$deviceName]['duration']['min'] += 60;
                        $ret[$deviceName]['duration']['hour']--;
                    }
                }
            }
        }
    }
    return $ret;
}

function writeCrontab( $data ) {
    global $devices;

    $file = <<<END
# Crontab automatically generated by rasptimer. Do not make manual files, they will be overwritten.
# See https://github.com/jernst/rasptimer
END;
    foreach( $devices as $deviceName => $devicePin ) {
        if( !isset( $data[$deviceName] )) {
            continue;
        }
        $p = $data[$deviceName];
        if( isset( $p['timeOn'] )) {
            if( isset( $p['timeOn']['hour'] )) {
                $hourOn = $p['timeOn']['hour'];
            } else {
                $hourOn = 0;
            }
            $minOn  = $p['timeOn']['min'];
            if( isset( $p['duration'] )) {
                if( isset( $p['duration']['hour'] )) {
                    $hourOff = $hourOn + $p['duration']['hour'];
                } else {
                    $hourOff = $hourOn + 1; # 1hr default
                }
                if( isset( $p['duration']['min'] )) {
                    $minOff = $minOn + $p['duration']['min'];
                } else {
                    $minOff = $minOn;
                }
            }
            while( $minOff > 59 ) {
                $minOff = $minOff - 60;
                $hourOff++;
            }
            $hourOff = $hourOff % 24; # runs daily

            $file .= "$minOn $hourOn * * * /usr/local/bin/gpio write $devicePin 1\n";
            $file .= "$minOff $hourOff * * * /usr/local/bin/gpio write $devicePin 0\n";
        }
    } 
    $tmp       = tempnam( '/tmp', 'rasptimer' );
    $tmpHandle = fopen( $tmp, "w" );
    fwrite( $tmpHandle, $file );
    fclose( $tmpHandle );

    exec( "/usr/bin/crontab $tmp" );

    unlink( $tmpHandle );
}

?>
<html>
 <head>
  <title>Rasptimer</title>
  <link href="css/default.css" rel="stylesheet" type="text/css" />
 </head>
 <body>
  <h1>Rasptimer</h1>
  <h2>Current status:</h2>
<?php
if( !isset( $devices )) {
?>
   <p class="error">No devices have been defined. Edit config.php</p>
<?php
} else {
?>
  <form method="POST">
   <table class="status">
<?php
    foreach( $devices as $deviceName => $devicePin ) {
        $deviceStatus = runGpio( "read $devicePin" );
?>
    <tr>
     <th><?php print( $deviceName ) ?> is:</th>
     <td>
<?php
print( $deviceStatus ? "on" : "off" );
?>
     </td>
     <td>
      <input type="submit" name="<?php print( $deviceName ) ?>Action" value="<?php print( $deviceStatus ? "Turn off" : "Turn on" ) ?>"/>
     </td>
    </tr>
<?php
    }
?>
   </table>
  </form>

  <h2>Schedule:</h2>
  <p>It currently is <?php print( date( "H:i:s" )) ?>.</p>
  <form method="POST">
   <table class="schedule">
<?php
    $schedule = readCrontab();
    foreach( $devices as $deviceName => $devicePin ) {
?>
    <tr>
     <th><?php print( $deviceName ) ?> daily at:</th>
     <td>
<?php
        if( $schedule[$deviceName]['timeOn'] ) {
            printf( "%02d:%02d:00 for %02d:%02d:00",
                    $schedule[$deviceName]['timeOn']['hour'],
                    $schedule[$deviceName]['timeOn']['min'],
                    $schedule[$deviceName]['duration']['hour'],
                    $schedule[$deviceName]['duration']['min'] );
        } else {
            print "not scheduled";
        }
?>
     </td>
    </tr>
<?php
    }
?>
   </table>
  </form>
<?php
}
?>
 <div class="footnote">
  <p>Licensed under <a href="LICENSE">GPLv3</a>.
     More info: <a href="https://github.com/jernst/rasptimer">https://github.com/jernst/rasptimer</a>.</p>
 </div>
 </body>
</html>

